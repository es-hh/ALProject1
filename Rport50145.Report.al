#pragma warning disable AA0005, AA0008, AA0018, AA0021, AA0072, AA0137, AA0201, AA0204, AA0206, AA0218, AA0228, AL0254, AL0424, AS0011, AW0006 // ForNAV settings

Report 50145 "Debitor Posten Erik"
{
	WordLayout = './Layouts/DebitorPostenErik.docx'; DefaultLayout = Word;

	dataset
	{
		dataitem(Customer;Customer)
		{
			column(ReportForNavId_1; 1) {} // Autogenerated by ForNav - Do not delete
			column(ReportForNav_Customer; ReportForNavWriteDataItem('Customer',Customer)) {}
			dataitem(CustLedgerEntry;"Cust. Ledger Entry")
			{
				CalcFields = Amount;
				DataItemLink = "Customer No." = FIELD("No.");
				column(ReportForNavId_3; 3) {} // Autogenerated by ForNav - Do not delete
				column(ReportForNav_CustLedgerEntry; ReportForNavWriteDataItem('CustLedgerEntry',CustLedgerEntry)) {}
				trigger OnPreDataItem();
				begin
					ReportForNav.OnPreDataItem('CustLedgerEntry',CustLedgerEntry);
				end;
				
			}
			trigger OnPreDataItem();
			begin
				ReportForNav.OnPreDataItem('Customer',Customer);
			end;
			
		}
	}
	requestpage
	{
		SaveValues = false;
		layout
		{
		}

	}

	trigger OnInitReport()
	begin
		;ReportsForNavInit;

	end;

	trigger OnPostReport()
	begin


	end;

	trigger OnPreReport()
	begin
		;ReportsForNavPre;
	end;

	// --> Reports ForNAV Autogenerated code - do not delete or modify
	var
		ReportForNav: Codeunit "ForNAV Report Management";
		ReportForNavTotalsCausedBy: Integer;
		ReportForNavInitialized: Boolean;
		ReportForNavShowOutput: Boolean;

	local procedure ReportsForNavInit()
	var
		id: Integer;
		FormatRegion: Text;
	begin
		Evaluate(id, CopyStr(CurrReport.ObjectId(false), StrPos(CurrReport.ObjectId(false), ' ') + 1));
		ReportForNav.OnInit(id);
	end;
	local procedure ReportsForNavPre() begin end;
	local procedure ReportForNavSetTotalsCausedBy(value : Integer) begin ReportForNavTotalsCausedBy := value; end;
	local procedure ReportForNavSetShowOutput(value : Boolean) begin ReportForNavShowOutput := value; end;
	local procedure ReportForNavInit(jsonObject : JsonObject) begin ReportForNav.Init(jsonObject, CurrReport.ObjectId); end;
	local procedure ReportForNavWriteDataItem(dataItemId: Text; rec : Variant) : Text
	var
		values: Text;
		jsonObject: JsonObject;
		currLanguage: Integer;
	begin
		if not ReportForNavInitialized then begin
			ReportForNavInit(jsonObject);
			ReportForNavInitialized := true;
		end;

		case (dataItemId) of
			'Customer':
				begin
					currLanguage := GlobalLanguage; GlobalLanguage := 1033; jsonObject.Add('DataItem$Customer$CurrentKey$Text',Customer.CurrentKey); GlobalLanguage := currLanguage;
				end;
			'CustLedgerEntry':
				begin
					currLanguage := GlobalLanguage; GlobalLanguage := 1033; jsonObject.Add('DataItem$CustLedgerEntry$CurrentKey$Text',CustLedgerEntry.CurrentKey); GlobalLanguage := currLanguage;
				end;
		end;
		ReportForNav.AddDataItemValues(jsonObject,dataItemId,rec);
		jsonObject.WriteTo(values);
		exit(values);
	end;
	// Reports ForNAV Autogenerated code - do not delete or modify -->
}
